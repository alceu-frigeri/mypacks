%%%==============================================================================
%% Copyright 2023-present by Alceu Frigeri
%%
%% This work may be distributed and/or modified under the conditions of
%%
%% * The [LaTeX Project Public License](http://www.latex-project.org/lppl.txt),
%%   version 1.3c (or later), and/or
%% * The [GNU Affero General Public License](https://www.gnu.org/licenses/agpl-3.0.html),
%%   version 3 (or later)
%%
%% This work has the LPPL maintenance status *maintained*.
%%
%% The Current Maintainer of this work is Alceu Frigeri
%%
%% This is version {0.1} {2023/12/05}
%%
%% The list of files that compose this work can be found in the README.md file at
%% https://ctan.org/pkg/ufrgscca
%%
%%%==============================================================================
%% WARNING: These are personal packs/tests
%%          They might and probably will change at will as needed
%% 
%%%==============================================================================
\NeedsTeXFormat{LaTeX2e}[2022/06/01]


\ProvidesExplPackage
    {tikzquest}
    {2023/12/05}
    {0.1}
    {A Simple Framework for Parametric Questions}

%%%%%%%
%%%
%%% Just an attempt of having my packages info in a regular way
%%% Idea being: { <pck-name> / pkg info } for each and all.
%%%
%%%%%%%
\keys_define:nn { tikzquest / pkg info}
  {
     name        .code:n = {tikzquest} ,
     prefix      .code:n = {tikzquest} ,
     date        .code:n = {2023/12/05},
     version     .code:n = {0.1} ,
     description .code:n = {A Simple Framework for Parametric Questions}

  }
\cs_if_exist:NF \__codedesc_pkg_info:nn 
  {
    \cs_new_protected:Npn \__codedesc_pkg_info:nn #1#2
      { \keys_set:nn {#1 / pkg info}{#2} }
  }
\cs_if_exist:NF \PkgInfo
  { \NewDocumentCommand \PkgInfo {mm} { \keys_set:nn {#1 / pkg info}{#2} } }
\cs_if_exist:NF \PkgDescription
  { 
    \NewDocumentCommand \PkgDescription {m} 
      { 
        \noindent Package~ \textbf{\PkgInfo{#1}{name}}~Version:~\PkgInfo{#1}{version}~ -~ \PkgInfo{#1}{date}\par \emph{\PkgInfo{#1}{description}}~\par 
      } 
  }  
%%%%%%%
%%% End of cut-n-paste
%%%%%%%

\keys_define:nn {tikzquest }
  {
    noalias .usage:n = load ,
    noalias  .bool_set:N = \l__tikzquest_noalias_bool ,

    xtrakeys .usage:n = general ,
    xtrakeys .tl_set:N = \l__tikzquest_xtrakeys_tl ,
    xtrakeys .value_required:n  = true ,
  }
\ProcessKeyOptions [ tikzquest ]


%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%
%%
%%
%%
%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%
\prop_new:N \l__tikzquest_questions_prop
\NewDocumentCommand{\defQuestion}{m+m}
  {
    \prop_put:Nnn {\l__tikzquest_questions_prop}{#1}{#2}
  }
\NewDocumentCommand{\defQuestionAlias}{mm}
  {
    \bool_if:NF \l__tikzquest_noalias_bool
      {
        \prop_put:Nnn {\l__tikzquest_questions_prop}{#1}{\prop_item:Nn \l__tikzquest_questions_prop {#2}}
      }
  }
  
\tl_new:N \l__tikzquest_quest_tl  
\NewDocumentCommand{\ftikzQuestion}{O{0.66}mO{}}
  {
    \prop_get:NnNTF \l__tikzquest_questions_prop {#2} \l__tikzquest_quest_tl
      {
    		\begin{figure}[!htb]
    			\begin{center}
    				\resizebox{#1\textwidth}{!}{
    				\begin{tikzpicture}
              \__tikzquest_pgfkeys:n{#3}
    					\l__tikzquest_quest_tl
    				\end{tikzpicture}}
    			\end{center}
    		\end{figure}    
      }
      {
    		\begin{figure}[!htb]
    			\begin{center}
            Invalid~key:~#2
    			\end{center}
    		\end{figure}           
      }
  }  
  
\NewDocumentCommand{\tikzQuestion}{O{0.66}mO{}}
  {
    \prop_get:NnNTF \l__tikzquest_questions_prop {#2} \l__tikzquest_quest_tl
      {
				\resizebox{#1\textwidth}{!}{
				\begin{tikzpicture}
          \__tikzquest_pgfkeys:n{#3}
  				\l__tikzquest_quest_tl
				\end{tikzpicture}}
      }
      {
        Invalid~key:~#2
      }
  }  
\NewDocumentCommand{\rawQuestion}{mO{}}
  {
    \prop_get:NnNTF \l__tikzquest_questions_prop {#2} \l__tikzquest_quest_tl
      {
        \__tikzquest_pgfkeys:n{#2}
 				\l__tikzquest_quest_tl
      }
      {
        Invalid~key:~#2
      }
  }

\NewDocumentCommand{\Questionslist}{O{\tikzQuestion}}
  {
    \seq_gclear_new:N \l__tikzquest_questions_seq
    \prop_map_inline:Nn \l__tikzquest_questions_prop
      {
        \seq_put_right:Nn \l__tikzquest_questions_seq {##1}
      }
%      \seq_show:N \l__tikzquest_questions_seq
    \seq_sort:Nn \l__tikzquest_questions_seq
      {
        \str_compare:eNeTF { ##1 } > { ##2 }
          { \sort_return_swapped: }
          { \sort_return_same: }
      }
%      \seq_show:N \l__tikzquest_questions_seq
    \begin{description}
      \seq_map_inline:Nn \l__tikzquest_questions_seq
        {
          \item[\raisebox{3em}{##1}] #1[0.33]{##1}
        }    
    \end{description}
  }
  
  
  
  
  

\cs_new:Npn \__tikzquest_pgfkeys:n #1
  { \pgfkeys{/Zval, #1} }

\makeatletter
\tl_if_empty:NTF \l__tikzquest_xtrakeys_tl
  {
    \def\tikzquest@@xtratkey{}
  }
  {
    \exp_args:NNe\def\tikzquest@@xtratkey{,\l__tikzquest_xtrakeys_tl}
  }

\ExplSyntaxOff
%
% no easy and clean way to convert it to expl3 (for instance underscore, under expl3 code regime, is a letter)
%
\NewDocumentCommand{\tikzquest@@SetDef}{O{}m}{%
  \pgfkeys{%
	  /Zval, default/.append style={/Zval/#2, default},%
	  /Zval/#2/.is family, /Zval/#2, default/.style={},%
		keyset/.code={\pgfkeysalso{%
		  default/.append style = {##1=#2_{#1{##1}}},%
			##1/.code={\csedef{#2##1}{$####1$}}%
		}},%
		setaux/.code={\pgfkeysalso{keyset/.list/.expanded={##1a,##1b,##1c,##1d,##1e,##1f,##1g,##1h,##1i,##1j,##1k,##1l,##1m,##1n,##1o,##1p,##1q,##1r,##1s,##1t,##1u,##1v,##1w,##1x,##1y,##1z}}},%
		setaux/.list/.expanded={,a,b,c,d,e,f,g}%
	}%
}%
%

\AtBeginDocument{\tikzquest@@KeysDef}

\NewDocumentCommand{\tikzquest@@KeysDef}{}{%
  \pgfkeys{/Zval/.is family, /Zval, default/.style={},%
	  defset/.code={\tikzquest@@SetDef{##1}},%
		defset/.list/.expanded={R,L,C,Z,K,T,Q,EQ,X,Y,D,M,N,A,B,U\tikzquest@@xtratkey},%
		defset/.code={\tikzquest@@SetDef[f_]{##1}},%
		defset/.list/.expanded={V,I},%
		default%
	}%
}%


%%%
%%% some handy/auxiliary macros to define coordinate/node pairs (and selectively 'pin' them)
%%%

%%
%% more of the same, spaces (pgf/tikz) and then ':' 
%%
\def\normalcoords{\let\coord=\normalcoord}
\def\showcoords{\let\coord=\showcoord}
\normalcoords

\def\genpincoord[#1,#2](#3){%
  coordinate(#3) node(n-#3){}%
  node[circle, #1,  inner sep=1.2pt, outer sep=0pt, radius=1pt, fill=#1!20!white, fill opacity=0.2, draw opacity=0.4, draw,
    pin={[#1, overlay, inner sep=0pt, outer sep=1pt, font=\tiny, pin distance=4pt,
    pin edge={#1, overlay}]#2:#3}](pin-#3){}%
  }
      
\def\pincoord(#1){\genpincoord[blue,-45](#1)}
\def\showcoord(#1){\genpincoord[red,45](#1)}
\def\normalcoord(#1){coordinate(#1)  node(n-#1){}}
