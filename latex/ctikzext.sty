%%%==============================================================================
%% Copyright 2023-present by Alceu Frigeri
%%
%% This work may be distributed and/or modified under the conditions of
%%
%% * The [LaTeX Project Public License](http://www.latex-project.org/lppl.txt),
%%   version 1.3c (or later), and/or
%% * The [GNU Affero General Public License](https://www.gnu.org/licenses/agpl-3.0.html),
%%   version 3 (or later)
%%
%% This work has the LPPL maintenance status *maintained*.
%%
%% The Current Maintainer of this work is Alceu Frigeri
%%
%% This is version {0.1} {2023/12/05}
%%
%% The list of files that compose this work can be found in the README.md file at
%% https://ctan.org/pkg/ufrgscca
%%
%%%==============================================================================
%% WARNING: These are personal packs/tests
%%          They might and probably will change at will as needed
%% 
%%%==============================================================================
\NeedsTeXFormat{LaTeX2e}[2022/06/01]


\ProvidesExplPackage
    {ctikzext}
    {2023/12/05}
    {0.1}
    {CircuiTikZ Extensions}

%%%%%%%
%%%
%%% Just an attempt of having my packages info in a regular way
%%% Idea being: { <pck-name> / pkg info } for each and all.
%%%
%%%%%%%
\keys_define:nn { ctikzext / pkg info}
  {
     name        .code:n = {ctikzext} ,
     prefix      .code:n = {ctikzext} ,
     date        .code:n = {2023/12/05},
     version     .code:n = {0.1} ,
     description .code:n = {CircuiTikZ Extensions}
  }
\cs_if_exist:NF \__codedesc_pkg_info:nn 
  {
    \cs_new_protected:Npn \__codedesc_pkg_info:nn #1#2
      { \keys_set:nn {#1 / pkg info}{#2} }
  }
\cs_if_exist:NF \PkgInfo
  { \NewDocumentCommand \PkgInfo {mm} { \keys_set:nn {#1 / pkg info}{#2} } }
\cs_if_exist:NF \PkgDescription
  { 
    \NewDocumentCommand \PkgDescription {m} 
      { 
        \noindent Package~ \textbf{\PkgInfo{#1}{name}}~Version:~\PkgInfo{#1}{version}~ -~ \PkgInfo{#1}{date}\par \emph{\PkgInfo{#1}{description}}~\par 
      } 
  }  
%%%%%%%
%%% End of cut-n-paste
%%%%%%%


\ExplSyntaxOff
\makeatletter

\newtoggle{ctikzext@@toggle@inverted}
\newtoggle{ctikzext@@toggle@generic}
\newtoggle{ctikzext@@toggle@alternate}
\newtoggle{ctikzext@@toggle@innerocirc}
\newtoggle{ctikzext@@toggle@outerocirc}
\newtoggle{ctikzext@@toggle@beziertip}
\newtoggle{ctikzext@@toggle@roundsources}
%
%
\def\ctikzext@@KeysPath{/tikz/QuadKeys}
\pgfkeys{\ctikzext@@KeysPath/.is family}
\newcommand{\ctikzext@@ValueofQuadKey}[1]{\pgfkeysvalueof{\ctikzext@@KeysPath/#1}}
\newcommand{\ctikzext@@QuadGetAnchor}[2]{\pgfkeys{\ctikzext@@KeysPath,#1={#2}}}

%%%%%%%%%%%%%%%%%%%
%%%
%%% re-mapping 'anchors names' in case of a 90 degree (clockwise) rotation
%%%            assuming the element should always be 90 degree rotated.
%%%
%%%%%%%%%%%%%%%%%%%
\def\ctikzext@@RPath{/tikz/QuadKeys/Anchor +90 Rotation}
\pgfkeys{\ctikzext@@RPath/.is family}
\pgfkeys{\ctikzext@@RPath,
    south/.code={\csdef{#1}{west}},
    south east/.code={\csdef{#1}{south west}},
    east/.code={\csdef{#1}{south}},
    north east/.code={\csdef{#1}{south east}},
    north/.code={\csdef{#1}{east}},
    north west/.code={\csdef{#1}{north east}},
    west/.code={\csdef{#1}{north}},
    south west/.code={\csdef{#1}{north west}},
}
\newcommand{\ctikzext@@RotateAnchor}[2]{\pgfkeys{\ctikzext@@RPath,#1={#2}}}



%%%%%%%%%%%%%%%%%%%
%%%
%%% re-mapping 'anchors names' in case of an auto 90 degree (clockwise) rotation
%%%            assuming the rotation was conditional (and original anchors were thought in the original position.)
%%%
%%%%%%%%%%%%%%%%%%%
\def\ctikzext@@AutoRPath{/tikz/QuadKeys/Anchor Auto +90 Rotation}
\pgfkeys{\ctikzext@@AutoRPath/.is family}
\pgfkeys{\ctikzext@@AutoRPath,
    east/.code={\csdef{#1}{south}},
    west/.code={\csdef{#1}{north}},    
    south west/.code={\csdef{#1}{south west}},
    south east/.code={\csdef{#1}{north east}},
    south/.code={\csdef{#1}{west}},
    north/.code={\csdef{#1}{east}},
    north east/.code={\csdef{#1}{north east}},
    north west/.code={\csdef{#1}{south west}},
}
\newcommand{\ctikzext@@AutoRotateAnchor}[2]{\pgfkeys{\ctikzext@@AutoRPath,#1={#2}}}


%
%%%%%%%%%%%%%%%%%%%
%%%
%%% re-mapping 'anchors names' in case of an 'invert' key
%%%
%%%%%%%%%%%%%%%%%%%
\def\ctikzext@@TPath{/tikz/QuadKeys/Translation}
\pgfkeys{\ctikzext@@TPath/.is family}
\pgfkeys{\ctikzext@@TPath,
    setdefault/.style={#1/.code={\csdef{##1}{#1}}},
    setdefault/.list={south west,south east,north west,north east,west,east,top left,top right,bottom left,bottom right,left,right},
    set/.style 2 args={#1/.code={\csdef{##1}{#2}}},
    .unknown/.code={\csdef{#1}{\pgfkeyscurrentname}},
} 
   
%%%
%%%
%%% pgf hackery, well, extention   

%%%%%%%%%%%%%%%%%%%
%%%
%%% pgf hackery, well, extention: allowing composit names
%%%
%%%%%%%%%%%%%%%%%%%
\pgfkeys{/pgf/text/.cd,
    top left/.style={/pgf/text/.cd,top,left},
    top right/.style={/pgf/text/.cd,top,right},
    bottom left/.style={/pgf/text/.cd,bottom,left},
    bottom right/.style={/pgf/text/.cd,bottom,right},
}   
    
%
%%%%%%%%%%%%%%%%%%%
%%%
%%% User Shapes as styles. Note that 'QuadKeys' assure that following keys are in the correct tree.
%%%
%%%%%%%%%%%%%%%%%%%
\tikzset{Quad compact/.style={Quad shape,QuadKeys,half base width=\pgf@circ@Rlen}}
\tikzset{BB/.style={BB shape,QuadKeys,half base width=\pgf@circ@Rlen}}
\tikzset{Black Box/.style={BB shape,QuadKeys,half base width=\pgf@circ@Rlen}}
\tikzset{Norton/.style={NortonBB shape,QuadKeys,round sources,half base width=\pgf@circ@Rlen}}
\tikzset{Thevenin/.style={TheveninBB shape,QuadKeys,round sources,half base width=\pgf@circ@Rlen}}
\tikzset{Quad/.style={Quad shape,QuadKeys}}
\tikzset{Quad Z/.style={Quad Z shape,QuadKeys}}
\tikzset{Quad Y/.style={Quad Y shape,QuadKeys}}
\tikzset{Quad G/.style={Quad G shape,QuadKeys}}
\tikzset{Quad H/.style={Quad H shape,QuadKeys}}

%%
%% These DO work, but be careful: the node gets a name only if <name> key is defined.
%%
%%%%%%%%%%%%%%%%%%%
%%%
%%% User shapes/keys which can be used in a to[]
%%%                  These DO work, but be careful: the node gets a name only if <name> key is defined.
%%%
%%%%%%%%%%%%%%%%%%%
\tikzset{ToQuad/.style={to path={node[Quad,outer x fit={\tikztostart}{\tikztotarget}](\ctikzext@@ValueofQuadKey{name}){}},QuadKeys}}
\tikzset{ToQuad Z/.style={to path={node[Quad Z,outer x fit={\tikztostart}{\tikztotarget}](\ctikzext@@ValueofQuadKey{name}){}},QuadKeys}}
\tikzset{ToQuad Y/.style={to path={node[Quad Y,outer x fit={\tikztostart}{\tikztotarget}](\ctikzext@@ValueofQuadKey{name}){}},QuadKeys}}
\tikzset{ToQuad G/.style={to path={node[Quad G,outer x fit={\tikztostart}{\tikztotarget}](\ctikzext@@ValueofQuadKey{name}){}},QuadKeys}}
\tikzset{ToQuad H/.style={to path={node[Quad H,outer x fit={\tikztostart}{\tikztotarget}](\ctikzext@@ValueofQuadKey{name}){}},QuadKeys}}

%%%%%%%%%%%%%%%%%%%
%%%
%%% Main keys definition
%%%
%%%%%%%%%%%%%%%%%%%
\pgfkeys{\ctikzext@@KeysPath,
    %.unknown/.code={\let\searchname=\pgfkeyscurrentname%
    %                \pgfkeysalso{/tikz/\searchname=#1}},
    .search also={/tikz},      
    none/.initial={}, %% this is a 'hack' for Thevenin/Norton ('control variable')   
    thickness/.initial=2,       
    half base width/.initial=2\pgf@circ@Rlen,%
    base width/.code={%
        \tikzmath{real \Xa;
          \Xa = 0.5*abs(#1);
        }
        \pgfkeysalso{\ctikzext@@KeysPath/half base width=\Xa}
    },
    name/.initial={},
    height ext/.initial=4\pgf@circ@Rlen/14,%
    height ext+/.style={height ext={4\pgf@circ@Rlen/14 + #1}},%
    height/.initial=\pgf@circ@Rlen,%
    half base height/.initial=10\pgf@circ@Rlen/14,%
    base height/.code={%
        \tikzmath{real \Xa;
          \Xa = 0.5*abs(#1);
        }
        \pgfkeysalso{\ctikzext@@KeysPath/half base height=\Xa}
    },
    inner ext/.initial=2\pgf@circ@Rlen/14,%
    outer ext/.initial=5\pgf@circ@Rlen/14,
    source radius/.initial=0.3\pgf@circ@Rlen,%
    @round sources/.code={\toggletrue{ctikzext@@toggle@roundsources}},
    round sources/.style={@round sources},
    @control sources/.code={\togglefalse{ctikzext@@toggle@roundsources}},
    control sources/.style={@control sources},
    minussign len/.initial=1.0\pgf@circ@Rlen/14,%
    plussign len/.initial=1.1\pgf@circ@Rlen/14,%
    tip len/.initial=4pt,
    tip type/.is choice,
    tip type/bezier/.code={\toggletrue{ctikzext@@toggle@beziertip}},
    tip type/triangle/.code={\togglefalse{ctikzext@@toggle@beziertip}},
    Y11/.initial=$Y_{11}$, Y12/.initial=$Y_{12}$, Y21/.initial=$Y_{21}$, Y22/.initial=$Y_{22}$,
    Z11/.initial=$Z_{11}$, Z12/.initial=$Z_{12}$, Z21/.initial=$Z_{21}$, Z22/.initial=$Z_{22}$,
    H11/.initial=$H_{11}$, H12/.initial=$H_{12}$, H21/.initial=$H_{21}$, H22/.initial=$H_{22}$,
    G11/.initial=$G_{11}$, G12/.initial=$G_{12}$, G21/.initial=$G_{21}$, G22/.initial=$G_{22}$,
     I1/.initial=$I_1$,     I2/.initial=$I_2$,     V1/.initial=$V_1$,     V2/.initial=$V_2$,
     In/.initial=$I_N$,     Yn/.initial=$Y_N$,    Vth/.initial=$V_{th}$, Zth/.initial=$Z_{th}$,
    zero/.initial=0,
    outer sep/.initial=1.5pt,
    inner sep/.initial=1pt,
    @inner ocirc/.code={\toggletrue{ctikzext@@toggle@innerocirc}},
    inner ocirc/.style={@inner ocirc},
    @outer ocirc/.code={\toggletrue{ctikzext@@toggle@outerocirc}},
    outer ocirc/.style={@outer ocirc},
    @invert/.code={\toggletrue{ctikzext@@toggle@inverted}},
    invert/.style={%
        /tikz/xscale=-1,
        @invert,
        \ctikzext@@TPath,
%        set={south west}{south east},
%        set={south east}{south west},
%        set={north west}{north east},
%        set={north east}{north west},        
%        set={west}{east},
%        set={east}{west},        
        set={bottom left}{bottom right},
        set={bottom right}{bottom left},
        set={top left}{top right},
        set={top right}{top left},        
        set={left}{right},
        set={right}{left}, 
        \ctikzext@@KeysPath,       
    },
    @generic/.code={\toggletrue{ctikzext@@toggle@generic}},
    generic/.style={@generic},
    compact/.style={half base width=\pgf@circ@Rlen},
    @alternate/.code={\toggletrue{ctikzext@@toggle@alternate}},
    alt/.style={@alternate},
    opt/.style={@alternate},
    inner x fit/.code 2 args={%
        \tikzmath{coordinate \Xa , \Xb;
          \Xa = (#1);
          \Xb = (#2);
          \Xdiff = 0.5*abs(\Xbx - \Xax) + \ctikzext@@ValueofQuadKey{inner ext};
        }
        \pgfkeysalso{\ctikzext@@KeysPath/half base width=\Xdiff}
      },
    outer x fit/.code 2 args={%
        \tikzmath{coordinate \Xa , \Xb;
          \Xa = (#1);
          \Xb = (#2);
          \Xdiff = 0.5*abs(\Xbx - \Xax) - \ctikzext@@ValueofQuadKey{outer ext};
        }
        \pgfkeysalso{\ctikzext@@KeysPath/half base width=\Xdiff}
      } ,
    y fit/.code 2 args={%
        \tikzmath{coordinate \Xa , \Xb;
          \Xa = (#1);
          \Xb = (#2);
          \Ydiff = 0.5*abs(\Xby - \Xay);
        }
        \pgfkeysalso{\ctikzext@@KeysPath/half base height=\Ydiff}
      } ,  
}

\pgfkeys{\ctikzext@@KeysPath,
    setlabelscmd/.style={%
        #1 N anchor/.style={}, 
        #1 T anchor/.style={}, 
        #1 label pos/.style 2 args={#1 N anchor/.style={\ctikzext@@TPath,##1=####1}, #1 T anchor/.style={\ctikzext@@TPath,##2=####1},  },
        },
    setlabelscmd/.list={Z11,Z12,Z21,Z22,Y11,Y12,Y21,Y22,G11,G12,G21,G22,H11,H12,H21,H22,In,Yn,Vth,Zth},
    defaults/.style={
        Z11 label pos={south west}{top left},
        Z12 label pos={south east}{top left},
        Z21 label pos={north west}{bottom right},
        Z22 label pos={south east}{top right},
%       
        Y11 label pos={south east}{top left},
        Y12 label pos={south east}{top left},
        Y21 label pos={north west}{bottom right},
        Y22 label pos={north west}{bottom right},
%       
        G11 label pos={south east}{top left},
        G12 label pos={south east}{top left},
        G21 label pos={north west}{bottom right},
        G22 label pos={south east}{top right},
%
        H11 label pos={south west}{top left},
        H12 label pos={south east}{top left},
        H21 label pos={north west}{bottom right},
        H22 label pos={north west}{bottom right},
        %
        Yn label pos={south east}{top left},
        In label pos={south east}{top left},
        %
        Zth label pos={south west}{top left},
        Vth label pos={south east}{top left},
        %
    },
    defaults,
}

%%%%%%%%%%%%%%%%%%%
%%%
%%% Coordinates for a Quadripole
%%%
%%%%%%%%%%%%%%%%%%%
\newcommand{\ctikzext@@QuadPoints}{
	\tikzmath{
		real \x,\y;
    \x{center}=0;
    \y{center}=0;
		\x{right}=0 + \ctikzext@@ValueofQuadKey{half base width};
		\y{top}=0 +( \ctikzext@@ValueofQuadKey{half base height} +  \ctikzext@@ValueofQuadKey{height ext});
		%
		\x{left}=0 - \ctikzext@@ValueofQuadKey{half base width};
		\y{bottom}=0 -( \ctikzext@@ValueofQuadKey{half base height} +  \ctikzext@@ValueofQuadKey{height ext});
		%
		\y{innerbottom}=0 - \ctikzext@@ValueofQuadKey{half base height};
		\y{innertop}=0 + \ctikzext@@ValueofQuadKey{half base height};
		%
		\y{outerbottom}=\y{bottom} - 0.5*\ctikzext@@ValueofQuadKey{outer ext};
		\y{outertop}=\y{top} + 0.5*\ctikzext@@ValueofQuadKey{outer ext};
		%
		\x{outerleft}=\x{left} - \ctikzext@@ValueofQuadKey{outer ext};
		\x{innerleft}=\x{left} + \ctikzext@@ValueofQuadKey{inner ext};
		%
		\x{outerright}=\x{right} + \ctikzext@@ValueofQuadKey{outer ext};
		\x{innerright}=\x{right} - \ctikzext@@ValueofQuadKey{inner ext};
    %
		\x{refC}=0 - 0.4*\ctikzext@@ValueofQuadKey{half base width};
    \x{refB}=(\x{innerleft}+\x{refC})/2; %center point for Res shape
    \x{refA}=(2*\x{innerleft}+\x{refC})/3; %'center' point for Y.Res shape
		%
		\y{Tbottom}=\y{bottom} + 0.65ex;
		\x{Tinnerleft}=\x{innerleft} ;
		\y{Tinnerbottom}=\y{innerbottom} + 0.95ex;
		\x{Tinnerright}=\x{innerright};
    \x{Tcenter}=0;
    %
		\y{Ttop}=\y{top} - 0.65ex;
		\y{Tinnertop}=\y{innertop} - 0.95ex;
	}
}




%%%%%%%%%%%%%%%%%%%
%%%
%%% if <key value>, #1, is zero, #2 is executed, otherwise #3.
%%%
%%%%%%%%%%%%%%%%%%%
\newcommand{\ctikzext@@CondDraw}[3]{
	\IfDecimal{\ctikzext@@ValueofQuadKey{#1}}{
		\ifnumequal{0+\ctikzext@@ValueofQuadKey{#1}}{0}{%
			#2
		}{%
			#3
		}
	}{#3}
}

%%%%%%%%%%%%%%%%%%%
%%%
%%% if <key value>, #1, is zero, a in place line is drawn, otherwise shape #2 is draw.
%%%
%%%%%%%%%%%%%%%%%%%
\newcommand{\ctikzext@@Zdraw}[5]{
  \ctikzext@@CondDraw{#1}{%
		\pgfnode{Shadow #2}{#3}{}{\tikz@fig@name-#1}{\pgfusepath{discard}}
		\pgfpathmoveto{\pgfpointanchor{\tikz@fig@name-#1}{#4}}
		\pgfpathlineto{\pgfpointanchor{\tikz@fig@name-#1}{#5}}
		\pgfusepath{stroke}
  }{%
		\pgfnode{#2}{#3}{}{\tikz@fig@name-#1}{\pgfusepath{stroke}}
  }
}



%%%%%%%%%%%%%%%%%%%
%%%
%%% Draws a Z side (impedance in series with a Voltage source
%%%
%%%%%%%%%%%%%%%%%%%

\newtoggle{ctikzext@@toggle@auxA}
\newtoggle{ctikzext@@toggle@auxB}
%
% #1->z11/z22 (res)
% #2->z12/z21 (vsource)
% #3 -> 'control source' I1/I2/V1/V2
% #4->"-" minus signal !!! for B side
%
\newcommand{\ctikzext@@Zside}[4]{
		\togglefalse{ctikzext@@toggle@auxA}
		\IfDecimal{\ctikzext@@ValueofQuadKey{#1}}{
			\ifnumequal{0+\ctikzext@@ValueofQuadKey{#1}}{0}{
			\toggletrue{ctikzext@@toggle@auxA}}
			}{}{
		}
		\togglefalse{ctikzext@@toggle@auxB}
		\IfDecimal{\ctikzext@@ValueofQuadKey{#2}}{
			\ifnumequal{0+\ctikzext@@ValueofQuadKey{#2}}{0}{
			\toggletrue{ctikzext@@toggle@auxB}}
			}{}{
		}
		\ifboolexpr{togl{ctikzext@@toggle@alternate} and ( togl{ctikzext@@toggle@auxA} or togl{ctikzext@@toggle@auxB})}{
			\iftoggle{ctikzext@@toggle@auxA}{
				{
					\pgftransformshift{\pgfpoint{#4\x{refB}}{0}}
					\ctikzext@@Zdraw{#2}{Vsource shape}{center}{north}{south}
				}
				{
					\pgfpathmoveto{\pgfpoint{#4\x{innerleft}}{\y{innertop}}}
					\pgfpathlineto{\pgfpoint{#4\x{refB}}{\y{innertop}}}
					\pgfpathlineto{\pgfpointanchor{\tikz@fig@name-#2}{north}}
					\pgfpathmoveto{\pgfpointanchor{\tikz@fig@name-#2}{south}}
					\pgfpathlineto{\pgfpoint{#4\x{refB}}{\y{innerbottom}}}
					\pgfpathlineto{\pgfpoint{#4\x{innerleft}}{\y{innerbottom}}}
					\pgfusepath{stroke}
				}
			}{
				{
					\pgftransformshift{\pgfpoint{#4\x{refB}}{0}}
					\pgftransformrotate{90}  %%% was #490
					\ctikzext@@Zdraw{#1}{Res shape}{center}{west}{east}
          \pgfusepath{stroke}
				}
				{
					\pgfpathmoveto{\pgfpoint{#4\x{innerleft}}{\y{innertop}}}
					\pgfpathlineto{\pgfpoint{#4\x{refB}}{\y{innertop}}}
					\pgfpathlineto{\pgfpointanchor{\tikz@fig@name-#1}{east}}
					\pgfpathmoveto{\pgfpointanchor{\tikz@fig@name-#1}{west}}
					\pgfpathlineto{\pgfpoint{#4\x{refB}}{\y{innerbottom}}}
					\pgfpathlineto{\pgfpoint{#4\x{innerleft}}{\y{innerbottom}}}
					\pgfusepath{stroke}
				}
			}
		}{
			{
        \pgftransformshift{\pgfpoint{#4\x{refB}}{\y{innertop}}}
        \ctikzext@@Zdraw{#1}{Res shape}{center}{west}{east}
        %\ctikzext@@Zdraw{#1}{resistorshape}{center}{west}{east}
			}
			{
				\pgftransformshift{\pgfpoint{#4\x{refC}}{0}}
				\ctikzext@@Zdraw{#2}{Vsource shape}{center}{north}{south}
			}
			{
        \pgfpathmoveto{\pgfpoint{#4\x{innerleft}}{\y{innertop}}}
        \ifnumequal{#41}{-1}{%
          \pgfpathlineto{\pgfpointanchor{\tikz@fig@name-#1}{east}}
  				\pgfpathmoveto{\pgfpointanchor{\tikz@fig@name-#1}{west}}
        }{%
          \pgfpathlineto{\pgfpointanchor{\tikz@fig@name-#1}{west}}
  				\pgfpathmoveto{\pgfpointanchor{\tikz@fig@name-#1}{east}}
        }
				\pgfpathlineto{\pgfpoint{#4\x{refC}}{\y{innertop}}}
				\pgfpathlineto{\pgfpointanchor{\tikz@fig@name-#2}{north}}
				\pgfpathmoveto{\pgfpointanchor{\tikz@fig@name-#2}{south}}
				\pgfpathlineto{\pgfpoint{#4\x{refC}}{\y{innerbottom}}}
				\pgfpathlineto{\pgfpoint{#4\x{innerleft}}{\y{innerbottom}}}
				\pgfusepath{stroke}
			}
		}
%
    \ctikzext@@QuadGetAnchor{#2 N anchor}{ctikzext@@NanchorB}
    \ctikzext@@QuadGetAnchor{#1 T anchor}{ctikzext@@TanchorA}
    \ctikzext@@QuadGetAnchor{#2 T anchor}{ctikzext@@TanchorB}
 		\ifboolexpr{togl{ctikzext@@toggle@alternate} and togl{ctikzext@@toggle@auxB}}{%
      \ctikzext@@QuadGetAnchor{#1 N anchor}{ctikzext@@NanchorAx}
      \ctikzext@@AutoRotateAnchor{\ctikzext@@NanchorAx}{ctikzext@@NanchorA}
    }{%
      \ctikzext@@QuadGetAnchor{#1 N anchor}{ctikzext@@NanchorA}
    }
    {       
    	\pgftransformresetnontranslations
    	\ctikzext@@CondDraw{#1}{}{\pgftext[\ctikzext@@TanchorA,at={\pgfpointanchor{\tikz@fig@name-#1}{\ctikzext@@NanchorA}}]{\ctikzext@@ValueofQuadKey{#1}}}
    	\ctikzext@@CondDraw{#2}{}{\pgftext[\ctikzext@@TanchorB,at={\pgfpointanchor{\tikz@fig@name-#2}{\ctikzext@@NanchorB}}]{\ctikzext@@ValueofQuadKey{#2}\ctikzext@@ValueofQuadKey{#3}}}
    }
}

%%%%%%%%%%%%%%%%%%%
%%%
%%% if <key value>, #1, is zero, nothing is drawn, otherwise shape #2 is draw.
%%%
%%%%%%%%%%%%%%%%%%%
\newcommand{\ctikzext@@Ydraw}[3]{
  \ctikzext@@CondDraw{#1}{%
    \pgfnode{Shadow #2}{#3}{}{\tikz@fig@name-#1}{\pgfusepath{discard}}
  }{%
    \pgfnode{#2}{#3}{}{\tikz@fig@name-#1}{\pgfusepath{stroke}}
  }
}

%%%%%%%%%%%%%%%%%%%
%%%
%%% Draws a Y side (impedance in paralel with a Currente source
%%%
%%%%%%%%%%%%%%%%%%%

% #1 Isource UP/DWN
% #2->y11/y22 (res)
% #3->y12/y21 (isource)
% #4 -> 'control source' I1/I2/V1/V2
% #5->"-" minus signal !!! for B side
%
\newcommand{\ctikzext@@Yside}[5][IsourceDOWN shape]{
		\togglefalse{ctikzext@@toggle@auxA}
		\IfDecimal{\ctikzext@@ValueofQuadKey{#2}}{
			\ifnumequal{0+\ctikzext@@ValueofQuadKey{#2}}{0}{
				\toggletrue{ctikzext@@toggle@auxA}}
			}{}{
		}
		\togglefalse{ctikzext@@toggle@auxB}
		\IfDecimal{\ctikzext@@ValueofQuadKey{#3}}{
			\ifnumequal{0+\ctikzext@@ValueofQuadKey{#3}}{0}{
				\toggletrue{ctikzext@@toggle@auxB}}
			}{}{
		}
		\ifboolexpr{togl{ctikzext@@toggle@alternate} and ( togl{ctikzext@@toggle@auxA} or togl{ctikzext@@toggle@auxB})}{
			\tikzmath{
				\x{20} = \x{refB};
				\x{21} = \x{refB};
			}
		}{
			\tikzmath{
				\x{20} = \x{refA};
				\x{21} = \x{refC};
			}
		}
%
		{
			\pgftransformshift{\pgfpoint{#5\x{20}}{0}}
			\pgftransformrotate{90}  %%% was {#590}
			\ctikzext@@Ydraw{#2}{Res shape}{center}
		}
		\ctikzext@@CondDraw{#2}{}{
			\pgfpathmoveto{\pgfpoint{#5\x{innerleft}}{\y{innertop}}}
			\pgfpathlineto{\pgfpoint{#5\x{20}}{\y{innertop}}}
			\pgfpathlineto{\pgfpointanchor{\tikz@fig@name-#2}{east}}
			\pgfpathmoveto{\pgfpointanchor{\tikz@fig@name-#2}{west}}
			\pgfpathlineto{\pgfpoint{#5\x{20}}{\y{innerbottom}}}
			\pgfpathlineto{\pgfpoint{#5\x{innerleft}}{\y{innerbottom}}}
			\pgfusepath{stroke}
		}
%
    {
			\pgftransformshift{\pgfpoint{#5\x{21}}{0}}
      \ctikzext@@Ydraw{#3}{#1}{center}
    }
		\ctikzext@@CondDraw{#3}{}{
			\pgfpathmoveto{\pgfpoint{#5\x{innerleft}}{\y{innertop}}}
			\pgfpathlineto{\pgfpoint{#5\x{refA}}{\y{innertop}}}
			\pgfpathlineto{\pgfpoint{#5\x{21}}{\y{innertop}}}
			\pgfpathlineto{\pgfpointanchor{\tikz@fig@name-#3}{north}}
			\pgfpathmoveto{\pgfpointanchor{\tikz@fig@name-#3}{south}}
			\pgfpathlineto{\pgfpoint{#5\x{21}}{\y{innerbottom}}}
			\pgfpathlineto{\pgfpoint{#5\x{innerleft}}{\y{innerbottom}}}
			\pgfusepath{stroke}
		}
    \ctikzext@@QuadGetAnchor{#2 N anchor}{ctikzext@@NanchorAx}
    \ctikzext@@QuadGetAnchor{#3 N anchor}{ctikzext@@NanchorB}
    \ctikzext@@QuadGetAnchor{#2 T anchor}{ctikzext@@TanchorA}
    \ctikzext@@QuadGetAnchor{#3 T anchor}{ctikzext@@TanchorB}
    \ctikzext@@RotateAnchor{\ctikzext@@NanchorAx}{ctikzext@@NanchorA}
    {
    	\pgftransformresetnontranslations
    	\ctikzext@@CondDraw{#2}{}{\pgftext[\ctikzext@@TanchorA,at={\pgfpointanchor{\tikz@fig@name-#2}{\ctikzext@@NanchorA}}]{\ctikzext@@ValueofQuadKey{#2}}}
    	\ctikzext@@CondDraw{#3}{}{\pgftext[\ctikzext@@TanchorB,at={\pgfpointanchor{\tikz@fig@name-#3}{\ctikzext@@NanchorB}}]{\ctikzext@@ValueofQuadKey{#3}\ctikzext@@ValueofQuadKey{#4}}}
    }
}


%%%%%%%%%%%%%%%%%%%
%%%
%%% Coordinates for a Resistor
%%%
%%%%%%%%%%%%%%%%%%%
\newcommand{\ctikzext@@ResPoints}{
		\tikzmath{
			real \x,\y;
      \x{center}=0;
      \y{center}=0;
      \x{left}=-\ctikzvalof{bipoles/resistor/width}\pgf@circ@Rlen/2;
      \x{right}=\ctikzvalof{bipoles/resistor/width}\pgf@circ@Rlen/2;
			\y{top}=+\ctikzvalof{bipoles/resistor/height}\pgf@circ@Rlen/2;
			\y{bottom}=-\ctikzvalof{bipoles/resistor/height}\pgf@circ@Rlen/2;
      \x{step}=\ctikzvalof{bipoles/resistor/width}\pgf@circ@Rlen/12;
      \y{step}=\ctikzvalof{bipoles/resistor/height}\pgf@circ@Rlen/2;
      %
      \x{Tcenter}=0;
      \y{Tcenter}=0;
			\y{Ttop}=+\ctikzvalof{bipoles/resistor/height}\pgf@circ@Rlen/2 +\ctikzext@@ValueofQuadKey{outer sep};
			\y{Tbottom}=-\y{Ttop};
			%
			\x{Tright}=+\ctikzvalof{bipoles/resistor/width}\pgf@circ@Rlen/2 +\ctikzext@@ValueofQuadKey{outer sep};
			\x{Tleft}=-\x{Tright};
		}
}

%%%%%%%%%%%%%%%%%%%
%%%
%%% Base Anchors for a Resistor like shape
%%%
%%%%%%%%%%%%%%%%%%%
\newcommand{\ctikzext@@ResBaseAnchors}[1]{
	\anchor{center}{\centerpoint}
	\savedanchor\centerpoint{%
    #1
    \pgfpoint{\x{center}}{\y{center}}
  }
	\anchor{text}{
    #1
    \pgfpoint{\x{Tcenter}}{\y{Ttop}}
	}
	\anchor{west}{\west}
	\savedanchor{\west}{%
    #1
    \pgfpoint{\x{left}}{\y{center}}
	}
	\anchor{east}{\east}
	\savedanchor{\east}{%
    #1
    \pgfpoint{\x{right}}{\y{center}}
	}
	\anchor{north}{\north}
	\savedanchor{\north}{%
    #1
    \pgfpoint{\x{Tcenter}}{\y{Ttop}}
	}
	\anchor{south}{\south}
	\savedanchor{\south}{%
    #1
    \pgfpoint{\x{Tcenter}}{\y{Tbottom}}
	}
	\anchor{north west}{\northwest}%
	\savedanchor{\northwest}{%
    #1
    \pgfpoint{\x{Tleft}}{\y{Ttop}}
	}
	\anchor{north east}{\northeast}%
	\savedanchor{\northeast}{%
    #1
    \pgfpoint{\x{Tright}}{\y{Ttop}}
	}
	\anchor{south west}{\southwest}%
	\savedanchor{\southwest}{%
    #1
    \pgfpoint{\x{Tleft}}{\y{Tbottom}}
	}
	\anchor{south east}{\southeast}%
	\savedanchor{\southeast}{%
    #1
    \pgfpoint{\x{Tright}}{\y{Tbottom}}
	}
}


%%%%%%%%%%%%%%%%%%%
%%%
%%% Resistor shape. either zig-zag or generic/european
%%%
%%%%%%%%%%%%%%%%%%%
\pgfdeclareshape{Res shape}{
  \ctikzext@@ResBaseAnchors{\ctikzext@@ResPoints}
	\behindbackgroundpath{
    \ctikzext@@ResPoints
    \pgfsetxvec{\pgfpoint{\x{step}}{0}}
		\pgfsetyvec{\pgfpoint{0}{\y{step}}}
  \begin{pgfscope}
    \pgfsetlinewidth{\ctikzext@@ValueofQuadKey{thickness}\pgflinewidth}
    \pgfsetbeveljoin
		\iftoggle{ctikzext@@toggle@generic}{
			\pgfpathmoveto{\pgfpointxy{-6}{-1}}
			\pgfpathlineto{\pgfpointxy{-6}{1}}
			\pgfpathlineto{\pgfpointxy{6}{1}}
			\pgfpathlineto{\pgfpointxy{6}{-1}}
			\pgfpathlineto{\pgfpointxy{-6}{-1}}
		}{
			\pgfpathmoveto{\pgfpointxy{-6}{0}}
			\pgfpathlineto{\pgfpointxy{-5}{1}}
			\pgfpathlineto{\pgfpointxy{-3}{-1}}
			\pgfpathlineto{\pgfpointxy{-1}{1}}
			\pgfpathlineto{\pgfpointxy{1}{-1}}
			\pgfpathlineto{\pgfpointxy{3}{1}}
			\pgfpathlineto{\pgfpointxy{5}{-1}}
			\pgfpathlineto{\pgfpointxy{6}{0}}
		}
    \pgfusepath{stroke}
  \end{pgfscope}
	}
	\backgroundpath{}
}



%%%%%%%%%%%%%%%%%%%
%%%
%%% Shadow Res shape => do nothing but defines anchors
%%%
%%%%%%%%%%%%%%%%%%%
\pgfdeclareshape{Shadow Res shape}{
	\inheritsavedanchors[from=Res shape]
	\foreach \anchor in {north,north west,north east,center,west,east,
	,south,south west,south east,text}{%
		\inheritanchor[from=Res shape]{\anchor}}
	\backgroundpath{}
}


%%%%%%%%%%%%%%%%%%%
%%%
%%% a simple arrow tip, can be a simple triangle or a bezier based one.
%%%          back of the tip at the 'starting point'
%%%
%%%%%%%%%%%%%%%%%%%
\newcommand{\ctikzext@@arrowtipat}[3]{
  { 
    \pgftransformshift{\pgfpoint{#2}{#3}}
    \pgftransformscale{\ctikzext@@ValueofQuadKey{tip len}}
    \pgftransformrotate{#1}%\pgfsetlinewidth{\ctikzext@@ValueofQuadKey{thickness}\pgflinewidth}
    \iftoggle{ctikzext@@toggle@beziertip}{   
        %% bezier version  
        \pgfsetroundcap\pgfsetbeveljoin%\pgfsetlinewidth{\ctikzext@@ValueofQuadKey{thickness}\pgflinewidth}
        \pgfpathmoveto{\pgfpoint{1}{0}}
        \pgfpathcurveto{\pgfpoint{0.3}{0.125}}{\pgfpoint{0.3}{0.125}}{\pgfpoint{0}{0.4}}
        \pgfpathcurveto{\pgfpoint{0.15}{0}}{\pgfpoint{0.15}{0}}{\pgfpoint{0}{-0.4}}
        \pgfpathcurveto{\pgfpoint{0.3}{-0.125}}{\pgfpoint{0.3}{-0.125}}{\pgfpoint{1}{0}}
    }{  %% simple triangle version
        \pgfsetroundcap
        \pgfpathmoveto{\pgfpoint{1}{0}}
        \pgfpathlineto{\pgfpoint{0}{0.45}}
        \pgfpathlineto{\pgfpoint{0}{-0.45}}
        \pgfpathlineto{\pgfpoint{1}{0}}
    }
  }
}

%%%%%%%%%%%%%%%%%%%
%%%
%%% a simple, centered at point of reference, 'plus' sign... it could be a \pgftext... but, that way it is more controlable.
%%%
%%%%%%%%%%%%%%%%%%%
\newcommand{\ctikzext@@plussignat}[3][\ctikzext@@ValueofQuadKey{plussign len}]{%
  {
			\pgftransformshift{\pgfpoint{#2}{#3}}
      \pgftransformscale{#1}
			\pgfpathmoveto{\pgfpoint{-1}{0}}
			\pgfpathlineto{\pgfpoint{1}{0}}
			\pgfpathmoveto{\pgfpoint{0}{-1}}
			\pgfpathlineto{\pgfpoint{0}{1}}    
  }
}

%%%%%%%%%%%%%%%%%%%
%%%
%%% a simple, centered at point of reference, 'minus' sign... it could be a \pgftext... but, that way it is more controlable.
%%%
%%%%%%%%%%%%%%%%%%%
\newcommand{\ctikzext@@minussignat}[3][\ctikzext@@ValueofQuadKey{minussign len}]{%
  {
			\pgftransformshift{\pgfpoint{#2}{#3}}
      \pgftransformscale{#1}
			\pgfpathmoveto{\pgfpoint{-1}{0}}
			\pgfpathlineto{\pgfpoint{1}{0}}
  }
}


%%%%%%%%%%%%%%%%%%%
%%%
%%% Coordinates for a (base) Source
%%%
%%%%%%%%%%%%%%%%%%%
\newcommand{\ctikzext@@SourcePoints}{
	\tikzmath{
		real \x,\y;
    \x{center}=0;
    \y{center}=0;
    \x{left}=-\ctikzext@@ValueofQuadKey{source radius};
    \x{right}=\ctikzext@@ValueofQuadKey{source radius};
		\y{top}=+\ctikzext@@ValueofQuadKey{source radius};
		\y{bottom}=-\ctikzext@@ValueofQuadKey{source radius};
    %
    \x{Tcenter}=0;
    \y{Tcenter}=0;
		\y{Tmiddletop}=+cos(45)*(\ctikzext@@ValueofQuadKey{source radius}+\ctikzext@@ValueofQuadKey{outer sep});
		\y{Tmiddlebottom}=-\y{Tmiddletop};
		%
		\x{Tmiddleright}=+cos(45)*(\ctikzext@@ValueofQuadKey{source radius}+\ctikzext@@ValueofQuadKey{outer sep});
		\x{Tmiddleleft}=-\x{Tmiddleright};
	}
}



%%%%%%%%%%%%%%%%%%%
%%%
%%% Base Anchors for a Source like shape
%%%
%%%%%%%%%%%%%%%%%%%
\newcommand{\ctikzext@@SourceBaseAnchors}[1]{
	\savedanchor\centerpoint{
		\pgfpoint{0}{0}
	}
	\anchor{center}{\centerpoint}
	\anchor{text}{\text}%
	\savedanchor{\text}{%
    #1
    \pgfpoint{\x{Tmiddleright}}{\y{Tmiddletop}}
	}
	\anchor{west}{\west}%
	\savedanchor{\west}{%
    #1
    \pgfpoint{\x{left}}{\y{center}}
	}
	\anchor{east}{\east}%
	\savedanchor{\east}{%
    #1
    \pgfpoint{\x{right}}{\y{center}}
	}
	\anchor{north}{\north}%
	\savedanchor{\north}{%
    #1
    \pgfpoint{\x{center}}{\y{top}}
	}
	\anchor{south}{\south}%
	\savedanchor{\south}{%
    #1
    \pgfpoint{\x{center}}{\y{bottom}}
	}
	\anchor{north west}{\northwest}%
	\savedanchor{\northwest}{%
    #1
    \pgfpoint{\x{Tmiddleleft}}{\y{Tmiddletop}}
	}
	\anchor{north east}{\northeast}%
	\savedanchor{\northeast}{%
    #1
    \pgfpoint{\x{Tmiddleright}}{\y{Tmiddletop}}
	}
	\anchor{south west}{\southwest}%
	\savedanchor{\southwest}{%
    #1
    \pgfpoint{\x{Tmiddleright}}{\y{Tmiddlebottom}}
	}
	\anchor{south east}{\southeast}%
	\savedanchor{\southeast}{%
    #1
    \pgfpoint{\x{Tmiddleright}}{\y{Tmiddlebottom}}
	}
}

%%%%%%%%%%%%%%%%%%%
%%%
%%% Base shape for a source like shape
%%%
%%%%%%%%%%%%%%%%%%%
\pgfdeclareshape{Base source shape}{
  \ctikzext@@SourceBaseAnchors{\ctikzext@@SourcePoints}
	\backgroundpath{}
		\pgfsetroundcap
		\pgfpathcircle{\pgfpoint{0}{0}}{\ctikzext@@ValueofQuadKey{source radius}}
	}


%%%%%%%%%%%%%%%%%%%
%%%
%%% Voltage source shape. either round or diamond
%%%
%%%%%%%%%%%%%%%%%%%
\pgfdeclareshape{Vsource shape}{
	\inheritsavedanchors[from=Base source shape]
	\foreach \anchor in {north,north west,north east,center,west,east,
	,south,south west,south east,text}{%
		\inheritanchor[from=Base source shape]{\anchor}}
	\backgroundpath{
		\pgfsetroundcap
    \begin{pgfscope}
      \ctikzext@@SourcePoints
      \pgfsetbeveljoin
      \pgfsetlinewidth{\ctikzext@@ValueofQuadKey{thickness}\pgflinewidth}
      \iftoggle{ctikzext@@toggle@roundsources}{
     		\pgfpathcircle{\pgfpoint{0}{0}}{\ctikzext@@ValueofQuadKey{source radius}}
      }{
        \pgfpathmoveto{\pgfpoint{\x{center}}{\y{top}}}
        \pgfpathlineto{\pgfpoint{\x{right}}{\y{center}}}
        \pgfpathlineto{\pgfpoint{\x{center}}{\y{bottom}}}
        \pgfpathlineto{\pgfpoint{\x{left}}{\y{center}}}
        \pgfpathlineto{\pgfpoint{\x{center}}{\y{top}}}
      }
      \pgfusepath{stroke}
    \end{pgfscope}
    \ctikzext@@minussignat[\ctikzext@@ValueofQuadKey{minussign len}]{0}{-0.4*\ctikzext@@ValueofQuadKey{source radius}}
    \ctikzext@@plussignat[\ctikzext@@ValueofQuadKey{plussign len}]{0}{0.4*\ctikzext@@ValueofQuadKey{source radius}}
    \pgfusepath{stroke}
	}
}


%%%%%%%%%%%%%%%%%%%
%%%
%%% Shadow Vsource shape => do nothing but defines anchors
%%%
%%%%%%%%%%%%%%%%%%%
\pgfdeclareshape{Shadow Vsource shape}{
	\inheritsavedanchors[from=Base source shape]
	\foreach \anchor in {north,north west,north east,center,west,east,
	,south,south west,south east,text}{%
		\inheritanchor[from=Base source shape]{\anchor}}
	\backgroundpath{}
}


%%%%%%%%%%%%%%%%%%%
%%%
%%% currente source shape, arrow pointing down. either round or diamond
%%%
%%%%%%%%%%%%%%%%%%%
\pgfdeclareshape{IsourceDOWN shape}{
	\inheritsavedanchors[from=Base source shape]
	\foreach \anchor in {north,north west,north east,center,west,east,
	,south,south west,south east,text}{%
		\inheritanchor[from=Base source shape]{\anchor}}
	\backgroundpath{
		\begin{pgfscope}
      \ctikzext@@SourcePoints
      \pgfsetlinewidth{\ctikzext@@ValueofQuadKey{thickness}\pgflinewidth}
  		\pgfsetroundcap
      \iftoggle{ctikzext@@toggle@roundsources}{
     		\pgfpathcircle{\pgfpoint{0}{0}}{\ctikzext@@ValueofQuadKey{source radius}}
      }{
        \pgfpathmoveto{\pgfpoint{\x{center}}{\y{top}}}
        \pgfpathlineto{\pgfpoint{\x{right}}{\y{center}}}
        \pgfpathlineto{\pgfpoint{\x{center}}{\y{bottom}}}
        \pgfpathlineto{\pgfpoint{\x{left}}{\y{center}}}
        \pgfpathlineto{\pgfpoint{\x{center}}{\y{top}}}
      }
  		\pgfpathmoveto{\pgfpoint{0}{0.7*\ctikzext@@ValueofQuadKey{source radius}}}
  		\pgfpathlineto{\pgfpoint{0}{-0.7*\ctikzext@@ValueofQuadKey{source radius}}}
  %
      \pgfusepath{stroke}
      \ctikzext@@arrowtipat{-90}{0}{-0.7*\ctikzext@@ValueofQuadKey{source radius}+\ctikzext@@ValueofQuadKey{tip len}}
      \pgfusepath{stroke,fill}
		\end{pgfscope}
	}}

%%%%%%%%%%%%%%%%%%%
%%%
%%% Shadow IsourceDOWN shape => do nothing but defines anchors
%%%
%%%%%%%%%%%%%%%%%%%
\pgfdeclareshape{Shadow IsourceDOWN shape}{
	\inheritsavedanchors[from=Base source shape]
	\foreach \anchor in {north,north west,north east,center,west,east,
	,south,south west,south east,text}{%
		\inheritanchor[from=Base source shape]{\anchor}}
	\backgroundpath{}
}


%%%%%%%%%%%%%%%%%%%
%%%
%%% currente source shape, arrow pointing up. either round or diamond
%%%
%%%%%%%%%%%%%%%%%%%
\pgfdeclareshape{IsourceUP shape}{
	\inheritsavedanchors[from=Base source shape]
	\foreach \anchor in {north,north west,north east,center,west,east,
	,south,south west,south east,text}{%
		\inheritanchor[from=Base source shape]{\anchor}}
	\backgroundpath{
		\begin{pgfscope}
      \ctikzext@@SourcePoints
      \pgfsetlinewidth{\ctikzext@@ValueofQuadKey{thickness}\pgflinewidth}
  		\pgfsetroundcap
      \iftoggle{ctikzext@@toggle@roundsources}{
     		\pgfpathcircle{\pgfpoint{0}{0}}{\ctikzext@@ValueofQuadKey{source radius}}
      }{
        \pgfpathmoveto{\pgfpoint{\x{center}}{\y{top}}}
        \pgfpathlineto{\pgfpoint{\x{right}}{\y{center}}}
        \pgfpathlineto{\pgfpoint{\x{center}}{\y{bottom}}}
        \pgfpathlineto{\pgfpoint{\x{left}}{\y{center}}}
        \pgfpathlineto{\pgfpoint{\x{center}}{\y{top}}}
      }
  		\pgfpathmoveto{\pgfpoint{0}{0.7*\ctikzext@@ValueofQuadKey{source radius}}}
  		\pgfpathlineto{\pgfpoint{0}{-0.7*\ctikzext@@ValueofQuadKey{source radius}}}
  %
      \pgfusepath{stroke}
      \ctikzext@@arrowtipat{90}{0}{0.7*\ctikzext@@ValueofQuadKey{source radius}-\ctikzext@@ValueofQuadKey{tip len}}
      \pgfusepath{stroke,fill}
		\end{pgfscope}
	}
}

%%%%%%%%%%%%%%%%%%%
%%%
%%% Shadow IsourceUP shape => do nothing but defines anchors
%%%
%%%%%%%%%%%%%%%%%%%
\pgfdeclareshape{Shadow IsourceUP shape}{
	\inheritsavedanchors[from=Base source shape]
	\foreach \anchor in {north,north west,north east,center,west,east,
	,south,south west,south east,text}{%
		\inheritanchor[from=Base source shape]{\anchor}}
	\backgroundpath{}
}


%%%%%%%%%%%%%%%%%%%
%%%
%%% Base Anchors for a Quadripole like shape
%%%
%%%%%%%%%%%%%%%%%%%
\newcommand{\ctikzext@@QuadBaseAnchors}[1]{
	\savedanchor\centerpoint{
		\pgfpoint{0}{0}
	}
	\anchor{center}{\centerpoint}
	\anchor{text}{\text}%
	\savedanchor{\text}{%
		#1
		\pgfpoint{\x{Tinnerleft}}{\y{Tbottom}}
	}
	\anchor{bottom left}{\bottomleft}
	\savedanchor{\bottomleft}{%
		#1
		\pgfpoint{\x{Tinnerleft}}{\y{Tbottom}}
	}
	\anchor{bottom center}{\bottomcenter}
	\savedanchor{\bottomcenter}{%
		#1
		\pgfpoint{0}{\y{Tbottom}}
	}
	\anchor{bottom right}{\bottomright}
	\savedanchor{\bottomright}{%
		#1
		\pgfpoint{\x{Tinnerright}}{\y{Tbottom}}
	}
	\anchor{near bottom left}{\nearbottomleft}
	\savedanchor{\nearbottomleft}{%
		#1
		\pgfpoint{\x{Tinnerleft}}{\y{Tinnerbottom}}
	}
	\anchor{near bottom center}{\nearbottomcenter}%
	\savedanchor{\nearbottomcenter}{%
		#1
		\pgfpoint{0}{\y{Tinnerbottom}}
	}
	\anchor{near bottom right}{\nearbottomright}%
	\savedanchor{\nearbottomright}{%
		#1
		\pgfpoint{\x{Tinnerright}}{\y{Tinnerbottom}}
	}
	\anchor{top left}{\topleft}%
	\savedanchor{\topleft}{%
		#1
		\pgfpoint{\x{Tinnerleft}}{-\y{Tbottom}}
	}
	\anchor{top center}{\topcenter}%
	\savedanchor{\topcenter}{%
		#1
		\pgfpoint{0}{-\y{Tbottom}}
	}
	\anchor{top right}{\topright}%
	\savedanchor{\topright}{%
		#1
		\pgfpoint{\x{Tinnerright}}{-\y{Tbottom}}
	}
	\anchor{near top left}{\neartopleft}%
	\savedanchor{\neartopleft}{%
		#1
		\pgfpoint{\x{Tinnerleft}}{-\y{Tinnerbottom}}
	}
	\anchor{near top center}{\neartopcenter}%
	\savedanchor{\neartopcenter}{%
		#1
		\pgfpoint{0}{-\y{Tinnerbottom}}
	}
	\anchor{near top right}{\neartopright}%
	\savedanchor{\neartopright}{%
		#1
		\pgfpoint{\x{Tinnerright}}{-\y{Tinnerbottom}}
	}
	\anchor{west}{\west}%
	\savedanchor{\west}{%
		#1
    \pgfpoint{\x{outerleft}}{\y{center}}
	}
	\anchor{east}{\east}%
	\savedanchor{\east}{%
		#1
    \pgfpoint{\x{outerright}}{\y{center}}
	}
	\anchor{north}{\north}%
	\savedanchor{\north}{%
		#1
    \pgfpoint{\x{center}}{\y{outertop}}
	}
	\anchor{north west}{\northwest}%
	\savedanchor{\northwest}{%
		#1
    \pgfpoint{\x{outerleft}}{\y{outertop}}
	}
	\anchor{north east}{\northeast}%
	\savedanchor{\northeast}{%
		#1
    \pgfpoint{\x{outerright}}{\y{outertop}}
	}
	\anchor{south}{\south}%
	\savedanchor{\south}{%
		#1
    \pgfpoint{\x{center}}{\y{outerbottom}}
	}
	\anchor{south west}{\southwest}%
	\savedanchor{\southwest}{%
		#1
    \pgfpoint{\x{outerleft}}{\y{outerbottom}}
	}
	\anchor{south east}{\southeast}%
	\savedanchor{\southeast}{%
		#1
    \pgfpoint{\x{outerright}}{\y{outerbottom}}
	}
	\anchor{1+}{\NodeA}
	\savedanchor{\NodeA}{
		#1
    \pgfpoint{\x{outerleft}}{\y{innertop}}
	}
	\anchor{1-}{\NodeB}
	\savedanchor{\NodeB}{
		#1
    \pgfpoint{\x{outerleft}}{\y{innerbottom}}
	}
	\anchor{inner 1+}{\NodeAi}
	\savedanchor{\NodeAi}{
		#1
    \pgfpoint{\x{innerleft}}{\y{innertop}}
	}
	\anchor{inner 1-}{\NodeBi}
	\savedanchor{\NodeBi}{
		#1
    \pgfpoint{\x{innerleft}}{\y{innerbottom}}
	}
}


%%%%%%%%%%%%%%%%%%%
%%%
%%% the Quadripole Base shape itself. Just a box with the external currents and voltages marked.
%%%
%%%%%%%%%%%%%%%%%%%
\pgfdeclareshape{Quad shape}{
%
  \ctikzext@@QuadBaseAnchors{\ctikzext@@QuadPoints}
%
	\anchor{2+}{\NodeC}
	\savedanchor{\NodeC}{
		\ctikzext@@QuadPoints
    \pgfpoint{\x{outerright}}{\y{innertop}}
	}
	\anchor{2-}{\NodeD}
	\savedanchor{\NodeD}{
		\ctikzext@@QuadPoints
    \pgfpoint{\x{outerright}}{\y{innerbottom}}
	}
	\anchor{inner 2+}{\NodeCi}
	\savedanchor{\NodeCi}{
		\ctikzext@@QuadPoints
    \pgfpoint{\x{innerright}}{\y{innertop}}
	}
	\anchor{inner 2-}{\NodeDi}
	\savedanchor{\NodeDi}{
		\ctikzext@@QuadPoints
    \pgfpoint{\x{innerright}}{\y{innerbottom}}
	}
%  
	\behindbackgroundpath{%  this is new
		\ctikzext@@QuadPoints
		\pgfpathmoveto{\pgfpoint{\x{left}}{\y{bottom}}} 
		\pgfpathlineto{\pgfpoint{\x{left}}{\y{top}}}
		\pgfpathlineto{\pgfpoint{\x{right}}{\y{top}}}
		\pgfpathlineto{\pgfpoint{\x{right}}{\y{bottom}}}
		\pgfpathlineto{\pgfpoint{\x{left}}{\y{bottom}}}
		\pgfpathmoveto{\pgfpoint{\x{outerleft}}{\y{innerbottom}}}
		\pgfpathlineto{\pgfpoint{\x{innerleft}}{\y{innerbottom}}}
		\pgfpathmoveto{\pgfpoint{-\x{outerleft}}{\y{innerbottom}}}
		\pgfpathlineto{\pgfpoint{-\x{innerleft}}{\y{innerbottom}}}
		\pgfpathmoveto{\pgfpoint{\x{outerleft}}{\y{innertop}}}
		\pgfpathlineto{\pgfpoint{\x{innerleft}}{\y{innertop}}} 
		\pgfpathmoveto{\pgfpoint{-\x{outerleft}}{\y{innertop}}}
		\pgfpathlineto{\pgfpoint{-\x{innerleft}}{\y{innertop}}}
    \ctikzext@@plussignat[\ctikzext@@ValueofQuadKey{plussign len}/2]{\x{outerleft}+\ctikzext@@ValueofQuadKey{outer ext}/2}{\y{innertop}-\ctikzext@@ValueofQuadKey{outer ext}/2}
    \ctikzext@@minussignat[\ctikzext@@ValueofQuadKey{minussign len}/2]{\x{outerleft}+\ctikzext@@ValueofQuadKey{outer ext}/2}{\y{innerbottom}+\ctikzext@@ValueofQuadKey{outer ext}/2}
    \ctikzext@@plussignat[\ctikzext@@ValueofQuadKey{plussign len}/2]{-\x{outerleft}-\ctikzext@@ValueofQuadKey{outer ext}/2}{\y{innertop}-\ctikzext@@ValueofQuadKey{outer ext}/2}
    \ctikzext@@minussignat[\ctikzext@@ValueofQuadKey{minussign len}/2]{-\x{outerleft}-\ctikzext@@ValueofQuadKey{outer ext}/2}{\y{innerbottom}+\ctikzext@@ValueofQuadKey{outer ext}/2}
    \pgfusepath{draw}
    \ctikzext@@arrowtipat{0}{\x{outerleft}+\ctikzext@@ValueofQuadKey{outer ext}/2}{\y{innertop}}
    \ctikzext@@arrowtipat{180}{-\x{outerleft}-\ctikzext@@ValueofQuadKey{outer ext}/2}{\y{innertop}}
    \pgfusepath{draw,fill}
    %
    \iftoggle{ctikzext@@toggle@innerocirc}{
    {
      \pgftransformshift{\pgfpoint{-\x{innerleft}}{\y{innertop}}}
      \pgfnode{ocirc}{center}{}{\tikz@fig@name-oc 2+}{}
    }
    {
      \pgftransformshift{\pgfpoint{\x{innerleft}}{\y{innertop}}}
      \pgfnode{ocirc}{center}{}{\tikz@fig@name-oc 1+}{}
    }
    {
      \pgftransformshift{\pgfpoint{\x{innerleft}}{\y{innerbottom}}}
      \pgfnode{ocirc}{center}{}{\tikz@fig@name-oc 1-}{}
    }
    {
      \pgftransformshift{\pgfpoint{-\x{innerleft}}{\y{innerbottom}}}
      \pgfnode{ocirc}{center}{}{\tikz@fig@name-oc 2-}{}
    }
    }{}  
    % 
    \iftoggle{ctikzext@@toggle@outerocirc}{
    {
      \pgftransformshift{\pgfpoint{-\x{outerleft}}{\y{innertop}}}
      \pgfnode{ocirc}{center}{}{\tikz@fig@name-oc 2+}{}
    }
    {
      \pgftransformshift{\pgfpoint{\x{outerleft}}{\y{innertop}}}
      \pgfnode{ocirc}{center}{}{\tikz@fig@name-oc 1+}{}
    }
    {
      \pgftransformshift{\pgfpoint{\x{outerleft}}{\y{innerbottom}}}
      \pgfnode{ocirc}{center}{}{\tikz@fig@name-oc 1-}{}
    }
    {
      \pgftransformshift{\pgfpoint{-\x{outerleft}}{\y{innerbottom}}}
      \pgfnode{ocirc}{center}{}{\tikz@fig@name-oc 2-}{}
    }
    }{}  
    % 
    {
    		\pgfsetdash{{0.8pt}{1pt}{0.2pt}{1pt}}{0pt}
        \pgfsetlinewidth{0.5\pgflinewidth}
    		\pgfpathmoveto{\pgfpoint{-\x{refA}}{\y{innerbottom}}}
    		\pgfpathlineto{\pgfpoint{\x{refA}}{\y{innerbottom}}}
    \pgfusepath{draw}
    }
		\iftoggle{ctikzext@@toggle@inverted}{
			\pgftransformresetnontranslations
			\pgftext[bottom,right,at={\pgfpoint{\x{left}-0.4ex}{\y{innertop}+0.8ex}}]{\ctikzext@@ValueofQuadKey{I2}}
			\pgftext[bottom,left,at={\pgfpoint{\x{right}+0.4ex}{\y{innertop}+0.8ex}}]{\ctikzext@@ValueofQuadKey{I1}}
			\pgftext[left,x=\x{right}+0.4ex]{\ctikzext@@ValueofQuadKey{V1}}
			\pgftext[right,x=\x{left}-0.4ex]{\ctikzext@@ValueofQuadKey{V2}}
		}{
			%\pgftransformresetnontranslations   %might be added, changes nothing if nothing scaled/rotated.
			\pgftext[bottom,left,at={\pgfpoint{\x{right}+0.4ex}{\y{innertop}+0.8ex}}]{\ctikzext@@ValueofQuadKey{I2}}
			\pgftext[bottom,right,at={\pgfpoint{\x{left}-0.4ex}{\y{innertop}+0.8ex}}]{\ctikzext@@ValueofQuadKey{I1}}
			\pgftext[right,x=\x{left}-0.4ex]{\ctikzext@@ValueofQuadKey{V1}}
			\pgftext[left,x=\x{right}+0.4ex]{\ctikzext@@ValueofQuadKey{V2}}
		}
	}
	\backgroundpath{	\pgftransformresetnontranslations}
}



%%%%%%%%%%%%%%%%%%%
%%%
%%% the Z Quadripole shape itself.
%%%
%%%%%%%%%%%%%%%%%%%
\pgfdeclareshape{Quad Z shape}{
	\inheritsavedanchors[from=Quad shape]
	\foreach \anchor in {north,center,west,east,south,north west,north east,south west, south east,
	text,bottom left,bottom right,bottom center, near bottom left, near bottom right, near bottom center,
	top left,top right,top center, near top left, near top right, near top center,
	1+,2+,1-,2-, inner 1+, inner 2+, inner 1-, inner 2-}{%
		\inheritanchor[from=Quad shape]{\anchor}}
	\inheritbehindbackgroundpath[from=Quad shape]
	\backgroundpath{
		\ctikzext@@QuadPoints
		\ctikzext@@Zside{Z11}{Z12}{I2}{}
		\ctikzext@@Zside{Z22}{Z21}{I1}{-}
		\pgftransformresetnontranslations
	}
}



%%%%%%%%%%%%%%%%%%%
%%%
%%% the Y Quadripole shape itself.
%%%
%%%%%%%%%%%%%%%%%%%
\pgfdeclareshape{Quad Y shape}{
	\inheritsavedanchors[from=Quad shape]
	\foreach \anchor in {north,center,west,east,south,north west,north east,south west, south east,
	text,bottom left,bottom right,bottom center, near bottom left, near bottom right, near bottom center,
	top left,top right,top center, near top left, near top right, near top center,
	1+,2+,1-,2-, inner 1+, inner 2+, inner 1-, inner 2-}{%
		\inheritanchor[from=Quad shape]{\anchor}}
	\inheritbehindbackgroundpath[from=Quad shape]
	\backgroundpath{
		\ctikzext@@QuadPoints
		\ctikzext@@Yside{Y11}{Y12}{V2}{}
		\ctikzext@@Yside{Y22}{Y21}{V1}{-}
		\pgftransformresetnontranslations
	}
}


%%%%%%%%%%%%%%%%%%%
%%%
%%% the H Quadripole shape itself.
%%%
%%%%%%%%%%%%%%%%%%%
\pgfdeclareshape{Quad H shape}{
	\inheritsavedanchors[from=Quad shape]
	\foreach \anchor in {north,center,west,east,south,north west,north east,south west, south east,
	text,bottom left,bottom right,bottom center, near bottom left, near bottom right, near bottom center,
	top left,top right,top center, near top left, near top right, near top center,
	1+,2+,1-,2-, inner 1+, inner 2+, inner 1-, inner 2-}{%
		\inheritanchor[from=Quad shape]{\anchor}}
	\inheritbehindbackgroundpath[from=Quad shape]
	\backgroundpath{
		\ctikzext@@QuadPoints
		\ctikzext@@Zside{H11}{H12}{V2}{}
		\ctikzext@@Yside{H22}{H21}{I1}{-}
		\pgftransformresetnontranslations
	}
}

%%%%%%%%%%%%%%%%%%%
%%%
%%% the G Quadripole shape itself.
%%%
%%%%%%%%%%%%%%%%%%%
\pgfdeclareshape{Quad G shape}{
	\inheritsavedanchors[from=Quad shape]
	\foreach \anchor in {north,center,west,east,south,north west,north east,south west, south east,
	text,bottom left,bottom right,bottom center, near bottom left, near bottom right, near bottom center,
	top left,top right,top center, near top left, near top right, near top center,
	1+,2+,1-,2-, inner 1+, inner 2+, inner 1-, inner 2-}{%
		\inheritanchor[from=Quad shape]{\anchor}}
	\inheritbehindbackgroundpath[from=Quad shape]
	\backgroundpath{
		\ctikzext@@QuadPoints
		\ctikzext@@Yside{G11}{G12}{I2}{}
		\ctikzext@@Zside{G22}{G21}{V1}{-}
		\pgftransformresetnontranslations
	}
}


%%%%%%%%%%%%%%%%%%%
%%%
%%% the BB (Black Box) is just a 'single sided' Quad
%%%
%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%
%%%
%%% Coordinates for a Black Box
%%%
%%%%%%%%%%%%%%%%%%%
\newcommand{\ctikzext@@BBPoints}{
	\tikzmath{
		real \x,\y;
    \x{center}=0;
    \y{center}=0;
		\x{right}=0 + \ctikzext@@ValueofQuadKey{half base width};
		\y{top}=0 +( \ctikzext@@ValueofQuadKey{half base height} +  \ctikzext@@ValueofQuadKey{height ext});
		%
		\x{left}=0 - \ctikzext@@ValueofQuadKey{half base width};
		\y{bottom}=0 -( \ctikzext@@ValueofQuadKey{half base height} +  \ctikzext@@ValueofQuadKey{height ext});
		%
		\y{innerbottom}=0 - \ctikzext@@ValueofQuadKey{half base height};
		\y{innertop}=0 + \ctikzext@@ValueofQuadKey{half base height};
		%
		\y{outerbottom}=\y{bottom} - 0.5*\ctikzext@@ValueofQuadKey{outer ext};
		\y{outertop}=\y{top} + 0.5*\ctikzext@@ValueofQuadKey{outer ext};
		%
		\x{outerleft}=\x{left} - \ctikzext@@ValueofQuadKey{outer ext};
		\x{innerleft}=\x{left} + \ctikzext@@ValueofQuadKey{inner ext};
		%
		\x{outerright}=\x{right} + \ctikzext@@ValueofQuadKey{outer ext};
		\x{innerright}=\x{right} - \ctikzext@@ValueofQuadKey{inner ext};
    %
		\x{refC}=0 + 0.3*\ctikzext@@ValueofQuadKey{half base width};
    \x{refB}=(\x{innerleft}+\x{refC})/2; %center point for Res shape
    \x{refA}=(2*\x{innerleft}+\x{refC})/3; %'center' point for Y.Res shape
		%
		\y{Tbottom}=\y{bottom} + 0.65ex;
		\x{Tinnerleft}=\x{innerleft} ;
		\y{Tinnerbottom}=\y{innerbottom} + 0.95ex;
		\x{Tinnerright}=\x{innerright};
    \x{Tcenter}=0;
    %
		\y{Ttop}=\y{top} - 0.65ex;
		\y{Tinnertop}=\y{innertop} - 0.95ex;
	}
}


%%%%%%%%%%%%%%%%%%%
%%%
%%% the base shape for a 'black box' dipole. Just the box plus the external current/voltage marked
%%%
%%%%%%%%%%%%%%%%%%%
\pgfdeclareshape{BB shape}{
  \ctikzext@@QuadBaseAnchors{\ctikzext@@BBPoints}
	\behindbackgroundpath{
		\ctikzext@@BBPoints
		\pgfpathmoveto{\pgfpoint{\x{left}}{\y{bottom}}}
		\pgfpathlineto{\pgfpoint{\x{left}}{\y{top}}}
		\pgfpathlineto{\pgfpoint{\x{right}}{\y{top}}}
		\pgfpathlineto{\pgfpoint{\x{right}}{\y{bottom}}}
		\pgfpathlineto{\pgfpoint{\x{left}}{\y{bottom}}}
		\pgfpathmoveto{\pgfpoint{\x{outerleft}}{\y{innerbottom}}}
		\pgfpathlineto{\pgfpoint{\x{innerleft}}{\y{innerbottom}}}
		\pgfpathmoveto{\pgfpoint{\x{outerleft}}{\y{innertop}}}
		\pgfpathlineto{\pgfpoint{\x{innerleft}}{\y{innertop}}}
    \ctikzext@@plussignat[\ctikzext@@ValueofQuadKey{plussign len}/2]{\x{outerleft}+\ctikzext@@ValueofQuadKey{outer ext}/2}{\y{innertop}-\ctikzext@@ValueofQuadKey{outer ext}/2}
    \ctikzext@@minussignat[\ctikzext@@ValueofQuadKey{minussign len}/2]{\x{outerleft}+\ctikzext@@ValueofQuadKey{outer ext}/2}{\y{innerbottom}+\ctikzext@@ValueofQuadKey{outer ext}/2}
		\pgfusepath{draw}
    \ctikzext@@arrowtipat{180}{\x{outerleft}+\ctikzext@@ValueofQuadKey{outer ext}/2}{\y{innertop}}
		\pgfusepath{draw,fill}
    %
    \iftoggle{ctikzext@@toggle@innerocirc}{
    {
      \pgftransformshift{\pgfpoint{\x{innerleft}}{\y{innertop}}}
      \pgfnode{ocirc}{center}{}{\tikz@fig@name-oc 1+}{}
    }
    {
      \pgftransformshift{\pgfpoint{\x{innerleft}}{\y{innerbottom}}}
      \pgfnode{ocirc}{center}{}{\tikz@fig@name-oc 1-}{}
    }
    }{}   
    %
    \iftoggle{ctikzext@@toggle@outerocirc}{
    {
      \pgftransformshift{\pgfpoint{\x{outerleft}}{\y{innertop}}}
      \pgfnode{ocirc}{center}{}{\tikz@fig@name-oc 1+}{}
    }
    {
      \pgftransformshift{\pgfpoint{\x{outerleft}}{\y{innerbottom}}}
      \pgfnode{ocirc}{center}{}{\tikz@fig@name-oc 1-}{}
    }
    }{}   
    %
		\iftoggle{ctikzext@@toggle@inverted}{
			\pgftransformresetnontranslations
			\pgftext[bottom,left,at={\pgfpoint{\x{right}+0.4ex}{\y{innertop}+0.8ex}}]{\ctikzext@@ValueofQuadKey{I1}}
			\pgftext[left,x=\x{right}+0.4ex]{\ctikzext@@ValueofQuadKey{V1}}
		}{
			\pgftext[bottom,right,at={\pgfpoint{\x{left}-0.4ex}{\y{innertop}+0.8ex}}]{\ctikzext@@ValueofQuadKey{I1}}
			\pgftext[right,x=\x{left}-0.4ex]{\ctikzext@@ValueofQuadKey{V1}}
		}
		\pgfusepath{draw}
	}
	\backgroundpath{}
}


%%%%%%%%%%%%%%%%%%%
%%%
%%% A 'Thevenin' circuit inside a black box.
%%%
%%%%%%%%%%%%%%%%%%%
\pgfdeclareshape{TheveninBB shape}{
	\inheritsavedanchors[from=BB shape]
	\foreach \anchor in {north,center,west,east,south,north west,north east,south west, south east,
	text,bottom left,bottom right,bottom center, near bottom left, near bottom right, near bottom center,
	top left,top right,top center, near top left, near top right, near top center,
	1+,1-, inner 1+, inner 1-}{%
		\inheritanchor[from=BB shape]{\anchor}}
	\inheritbehindbackgroundpath[from=BB shape]
	\backgroundpath{
		\ctikzext@@BBPoints
		\ctikzext@@Zside{Zth}{Vth}{none}{}
		\pgftransformresetnontranslations
	}
}


%%%%%%%%%%%%%%%%%%%
%%%
%%% A 'Norton' circuit inside a black box.
%%%
%%%%%%%%%%%%%%%%%%%
\pgfdeclareshape{NortonBB shape}{
	\inheritsavedanchors[from=BB shape]
	\foreach \anchor in {north,center,west,east,south,north west,north east,south west, south east,
	text,bottom left,bottom right,bottom center, near bottom left, near bottom right, near bottom center,
	top left,top right,top center, near top left, near top right, near top center,
	1+,1-, inner 1+, inner 1-}{%
		\inheritanchor[from=BB shape]{\anchor}}
	\inheritbehindbackgroundpath[from=BB shape]
	\backgroundpath{
		\ctikzext@@BBPoints
    \ctikzext@@Yside[IsourceUP shape]{Yn}{In}{none}{}
		\pgftransformresetnontranslations
	}
}



%%%%%%%%%%%%%%%%%%%
%%%
%%% Just a 'handy' macro for a parallel connection (needs a recent kernel, thought)
%%% Both Quadripoles are assumed to be a top each other (x center aligned, same width)
%%%
%%%%%%%%%%%%%%%%%%%
\NewDocumentCommand{\QuadParConnect}{smmm}{
	\ifstrequal{#4}{1}{\def\ctikzext@@Qsig{-}}{\def\ctikzext@@Qsig{}}
  \IfBooleanTF{#1}{
    \draw
			(#3.#4+) -- ++(\ctikzext@@Qsig\ctikzext@@ValueofQuadKey{outer ext}/4,0) |- (#2.#4+)
      (#3.#4-) to[out=90,in=90] ++(\ctikzext@@Qsig\ctikzext@@ValueofQuadKey{outer ext}/2,0) -- ++(\ctikzext@@Qsig\ctikzext@@ValueofQuadKey{outer ext}/4,0)  |- (#2.#4-)
      ;
	}{
		\draw 
			(#3.#4-) -- ++(\ctikzext@@Qsig\ctikzext@@ValueofQuadKey{outer ext}/4,0) |- (#2.#4-)
      (#2.#4+) to[out=90,in=90] ++(\ctikzext@@Qsig\ctikzext@@ValueofQuadKey{outer ext}/2,0) -- ++(\ctikzext@@Qsig\ctikzext@@ValueofQuadKey{outer ext}/4,0)  |- (#3.#4+)
    ;
	}
}

